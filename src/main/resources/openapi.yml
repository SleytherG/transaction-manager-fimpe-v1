openapi: 3.0.3
info:
  title: Transactions Manager FimPE API v1
  description: |-
    Esta API permite gestionar operaciones financieras tales como transferencias, depositos,
    recargas pero todo en alguna aplicacion, la cual permitira administrar de una manera m√°s optima todos los tipos de operacion que existen en el aplicativo.
  version: 1.0.0
servers:
  - url: http://localhost:9000
tags:
  - name: Operations
    description: Operaciones de distintos tipos.

paths:
  /operation:
    post:
      tags:
        - Operations
      summary: Registra operaciones que se realizan con algun aplicativo.
      operationId: registerAnOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequest'
        required: true
      responses:
        '200':
          description: Operacion registrada con exito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationRegisterResponse'
  /operation/findByOperationTypeAndCollaborator/{operationType}/{idCollaborator}:
    get:
      tags:
        - Operations
      summary: Obtiene una lista de operaciones dependiendo del tipo de operacion y el colaborador.
      operationId: getAllOperationsByOperationTypeAndCollaborator
      parameters:
        - name: operationType
          in: path
          description: ID of operation type
          required: true
          schema:
            type: integer
            format: int64
        - name: idCollaborator
          in: path
          description: ID of collaborator
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Lista de todas las operaciones dependiendo del tipo de operacion y colaborador.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResponse'
  /operation/findAllOperationsByACollaborator/{idCollaborator}:
    get:
      tags:
        - Operations
      summary: Obtiene todas las operaciones realizadas por un colaborador.
      operationId: findAllOperationsByACollaborator
      parameters:
        - name: idCollaborator
          in: path
          description: ID of collaborator
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Lista de todas las operaciones de un colaborador.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResponse'
  /operation/{idOperation}:
    get:
      tags:
        - Operations
      summary: Get an operation by id.
      operationId: findOperationById
      parameters:
        - name: idOperation
          in: path
          description: ID of an operation
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Obtiene una operacion por su identificador.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
    put:
      tags:
        - Operations
      summary: Update an operation
      operationId: updateAnOperation
      parameters:
        - name: idOperation
          in: path
          description: ID of an operation
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequest'
        required: true
      responses:
        '200':
          description: Operacion realizada con exito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationUpdateResponse'
components:
  schemas:
    OperationRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        operationDate:
          type: string
          example: '27/06/2024'
        operationTime:
          type: string
          example: '18:30'
        amount:
          type: number
          format: double
          example: 1500.50
        idCollaborate:
          type: integer
          format: int64
          example: 10
        idOperationType:
          type: integer
          format: int64
          example: 10
        idAffiliate:
          type: integer
          format: int64
          example: 10
    Operation:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        operationDate:
          type: string
          example: '27/06/2024'
        operationTime:
          type: string
          example: '18:30'
        amount:
          type: number
          format: double
          example: 1500.50
        collaborate:
          $ref: "#/components/schemas/Person"
        operationType:
          $ref: "#/components/schemas/OperationType"
        affiliate:
          $ref: "#/components/schemas/Person"
    OperationRegisterResponse:
      type: object
      properties:
        message:
          type: string
          example: La operacion se ha registrado de forma exitosa!.
        status:
          type: string
          example: 200
    OperationListResponse:
      type: array
      items:
        $ref: "#/components/schemas/Operation"
    OperationUpdateResponse:
      type: object
      properties:
        message:
          type: string
          example: La operacion se ha actualizado de forma exitosa!.
        status:
          type: string
          example: 200
    Person:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        firstName:
          type: string
          example: Juan Carlos
        lastName:
          type: string
          example: Gonzales Rodriguez
        email:
          type: string
          example: test@test.com
        phone:
          type: string
          example: +51994505042
    PersonType:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 5
        namePersonType:
          type: string
          example: 'COLLABORATE'
    OperationType:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 5
        nameOperationType:
          type: string
          example: 'RETIRO'
    Operator:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 7
        nameOperator:
          type: string
          example: 'CLARO'
